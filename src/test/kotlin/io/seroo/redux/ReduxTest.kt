/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */package io.seroo.redux

import classes.*
import kotlin.test.Test

class ReduxTest {
    @Test
    fun store1Test() {
        val store = Redux.createStore(TestState1(), reducer)
        val unSubscribe = store.subscribe { state ->
            assert(state.type is TestActions.Init)
        }
        store.dispatch(TestActions.Init)
        unSubscribe()

        val unSubscribe2 = store.subscribe { state ->
            assert(state.type is TestActions.ReplaceId)
        }
        store.dispatch(TestActions.ReplaceId(""))
        unSubscribe2()

        val unSubscribe3 = store.subscribe { state ->
            assert(state.type is TestActions.ReplaceAddress)
        }
        store.dispatch(TestActions.ReplaceAddress(""))
        unSubscribe3()

        val unSubscribe4 = store.subscribe { state ->
            assert(state.type is TestActions.ReplaceName)
        }
        store.dispatch(TestActions.ReplaceName(""))
        unSubscribe4()
    }

    @Test
    fun store2Test() {
        val store = Redux.createStore(TestState2(), reducer2)

        val unSubscribe = store.subscribe { state ->
            assert(state.type is TestActions2.Init)
        }
        store.dispatch(TestActions2.Init)
        unSubscribe()

        val unSubscribe2 = store.subscribe { state ->
            assert(state.type is TestActions2.ReplaceId)
        }
        store.dispatch(TestActions2.ReplaceId(""))
        unSubscribe2()

        val unSubscribe3 = store.subscribe { state ->
            assert(state.type is TestActions2.ReplaceName)
        }
        store.dispatch(TestActions2.ReplaceName(""))
        unSubscribe3()
    }
}
